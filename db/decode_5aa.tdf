--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=25 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_5aa
( 
	data[4..0]	:	input;
	eq[24..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[24..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1006w[3..0]	: WIRE;
	w_anode1016w[3..0]	: WIRE;
	w_anode1026w[3..0]	: WIRE;
	w_anode658w[2..0]	: WIRE;
	w_anode672w[3..0]	: WIRE;
	w_anode689w[3..0]	: WIRE;
	w_anode699w[3..0]	: WIRE;
	w_anode709w[3..0]	: WIRE;
	w_anode719w[3..0]	: WIRE;
	w_anode729w[3..0]	: WIRE;
	w_anode739w[3..0]	: WIRE;
	w_anode749w[3..0]	: WIRE;
	w_anode761w[2..0]	: WIRE;
	w_anode771w[3..0]	: WIRE;
	w_anode782w[3..0]	: WIRE;
	w_anode792w[3..0]	: WIRE;
	w_anode802w[3..0]	: WIRE;
	w_anode812w[3..0]	: WIRE;
	w_anode822w[3..0]	: WIRE;
	w_anode832w[3..0]	: WIRE;
	w_anode842w[3..0]	: WIRE;
	w_anode853w[2..0]	: WIRE;
	w_anode863w[3..0]	: WIRE;
	w_anode874w[3..0]	: WIRE;
	w_anode884w[3..0]	: WIRE;
	w_anode894w[3..0]	: WIRE;
	w_anode904w[3..0]	: WIRE;
	w_anode914w[3..0]	: WIRE;
	w_anode924w[3..0]	: WIRE;
	w_anode934w[3..0]	: WIRE;
	w_anode945w[2..0]	: WIRE;
	w_anode955w[3..0]	: WIRE;
	w_anode966w[3..0]	: WIRE;
	w_anode976w[3..0]	: WIRE;
	w_anode986w[3..0]	: WIRE;
	w_anode996w[3..0]	: WIRE;
	w_data656w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[24..0] = eq_wire[24..0];
	eq_wire[] = ( ( w_anode1026w[3..3], w_anode1016w[3..3], w_anode1006w[3..3], w_anode996w[3..3], w_anode986w[3..3], w_anode976w[3..3], w_anode966w[3..3], w_anode955w[3..3]), ( w_anode934w[3..3], w_anode924w[3..3], w_anode914w[3..3], w_anode904w[3..3], w_anode894w[3..3], w_anode884w[3..3], w_anode874w[3..3], w_anode863w[3..3]), ( w_anode842w[3..3], w_anode832w[3..3], w_anode822w[3..3], w_anode812w[3..3], w_anode802w[3..3], w_anode792w[3..3], w_anode782w[3..3], w_anode771w[3..3]), ( w_anode749w[3..3], w_anode739w[3..3], w_anode729w[3..3], w_anode719w[3..3], w_anode709w[3..3], w_anode699w[3..3], w_anode689w[3..3], w_anode672w[3..3]));
	w_anode1006w[] = ( (w_anode1006w[2..2] & w_data656w[2..2]), (w_anode1006w[1..1] & (! w_data656w[1..1])), (w_anode1006w[0..0] & w_data656w[0..0]), w_anode945w[2..2]);
	w_anode1016w[] = ( (w_anode1016w[2..2] & w_data656w[2..2]), (w_anode1016w[1..1] & w_data656w[1..1]), (w_anode1016w[0..0] & (! w_data656w[0..0])), w_anode945w[2..2]);
	w_anode1026w[] = ( (w_anode1026w[2..2] & w_data656w[2..2]), (w_anode1026w[1..1] & w_data656w[1..1]), (w_anode1026w[0..0] & w_data656w[0..0]), w_anode945w[2..2]);
	w_anode658w[] = ( (w_anode658w[1..1] & (! data_wire[4..4])), (w_anode658w[0..0] & (! data_wire[3..3])), B"1");
	w_anode672w[] = ( (w_anode672w[2..2] & (! w_data656w[2..2])), (w_anode672w[1..1] & (! w_data656w[1..1])), (w_anode672w[0..0] & (! w_data656w[0..0])), w_anode658w[2..2]);
	w_anode689w[] = ( (w_anode689w[2..2] & (! w_data656w[2..2])), (w_anode689w[1..1] & (! w_data656w[1..1])), (w_anode689w[0..0] & w_data656w[0..0]), w_anode658w[2..2]);
	w_anode699w[] = ( (w_anode699w[2..2] & (! w_data656w[2..2])), (w_anode699w[1..1] & w_data656w[1..1]), (w_anode699w[0..0] & (! w_data656w[0..0])), w_anode658w[2..2]);
	w_anode709w[] = ( (w_anode709w[2..2] & (! w_data656w[2..2])), (w_anode709w[1..1] & w_data656w[1..1]), (w_anode709w[0..0] & w_data656w[0..0]), w_anode658w[2..2]);
	w_anode719w[] = ( (w_anode719w[2..2] & w_data656w[2..2]), (w_anode719w[1..1] & (! w_data656w[1..1])), (w_anode719w[0..0] & (! w_data656w[0..0])), w_anode658w[2..2]);
	w_anode729w[] = ( (w_anode729w[2..2] & w_data656w[2..2]), (w_anode729w[1..1] & (! w_data656w[1..1])), (w_anode729w[0..0] & w_data656w[0..0]), w_anode658w[2..2]);
	w_anode739w[] = ( (w_anode739w[2..2] & w_data656w[2..2]), (w_anode739w[1..1] & w_data656w[1..1]), (w_anode739w[0..0] & (! w_data656w[0..0])), w_anode658w[2..2]);
	w_anode749w[] = ( (w_anode749w[2..2] & w_data656w[2..2]), (w_anode749w[1..1] & w_data656w[1..1]), (w_anode749w[0..0] & w_data656w[0..0]), w_anode658w[2..2]);
	w_anode761w[] = ( (w_anode761w[1..1] & (! data_wire[4..4])), (w_anode761w[0..0] & data_wire[3..3]), B"1");
	w_anode771w[] = ( (w_anode771w[2..2] & (! w_data656w[2..2])), (w_anode771w[1..1] & (! w_data656w[1..1])), (w_anode771w[0..0] & (! w_data656w[0..0])), w_anode761w[2..2]);
	w_anode782w[] = ( (w_anode782w[2..2] & (! w_data656w[2..2])), (w_anode782w[1..1] & (! w_data656w[1..1])), (w_anode782w[0..0] & w_data656w[0..0]), w_anode761w[2..2]);
	w_anode792w[] = ( (w_anode792w[2..2] & (! w_data656w[2..2])), (w_anode792w[1..1] & w_data656w[1..1]), (w_anode792w[0..0] & (! w_data656w[0..0])), w_anode761w[2..2]);
	w_anode802w[] = ( (w_anode802w[2..2] & (! w_data656w[2..2])), (w_anode802w[1..1] & w_data656w[1..1]), (w_anode802w[0..0] & w_data656w[0..0]), w_anode761w[2..2]);
	w_anode812w[] = ( (w_anode812w[2..2] & w_data656w[2..2]), (w_anode812w[1..1] & (! w_data656w[1..1])), (w_anode812w[0..0] & (! w_data656w[0..0])), w_anode761w[2..2]);
	w_anode822w[] = ( (w_anode822w[2..2] & w_data656w[2..2]), (w_anode822w[1..1] & (! w_data656w[1..1])), (w_anode822w[0..0] & w_data656w[0..0]), w_anode761w[2..2]);
	w_anode832w[] = ( (w_anode832w[2..2] & w_data656w[2..2]), (w_anode832w[1..1] & w_data656w[1..1]), (w_anode832w[0..0] & (! w_data656w[0..0])), w_anode761w[2..2]);
	w_anode842w[] = ( (w_anode842w[2..2] & w_data656w[2..2]), (w_anode842w[1..1] & w_data656w[1..1]), (w_anode842w[0..0] & w_data656w[0..0]), w_anode761w[2..2]);
	w_anode853w[] = ( (w_anode853w[1..1] & data_wire[4..4]), (w_anode853w[0..0] & (! data_wire[3..3])), B"1");
	w_anode863w[] = ( (w_anode863w[2..2] & (! w_data656w[2..2])), (w_anode863w[1..1] & (! w_data656w[1..1])), (w_anode863w[0..0] & (! w_data656w[0..0])), w_anode853w[2..2]);
	w_anode874w[] = ( (w_anode874w[2..2] & (! w_data656w[2..2])), (w_anode874w[1..1] & (! w_data656w[1..1])), (w_anode874w[0..0] & w_data656w[0..0]), w_anode853w[2..2]);
	w_anode884w[] = ( (w_anode884w[2..2] & (! w_data656w[2..2])), (w_anode884w[1..1] & w_data656w[1..1]), (w_anode884w[0..0] & (! w_data656w[0..0])), w_anode853w[2..2]);
	w_anode894w[] = ( (w_anode894w[2..2] & (! w_data656w[2..2])), (w_anode894w[1..1] & w_data656w[1..1]), (w_anode894w[0..0] & w_data656w[0..0]), w_anode853w[2..2]);
	w_anode904w[] = ( (w_anode904w[2..2] & w_data656w[2..2]), (w_anode904w[1..1] & (! w_data656w[1..1])), (w_anode904w[0..0] & (! w_data656w[0..0])), w_anode853w[2..2]);
	w_anode914w[] = ( (w_anode914w[2..2] & w_data656w[2..2]), (w_anode914w[1..1] & (! w_data656w[1..1])), (w_anode914w[0..0] & w_data656w[0..0]), w_anode853w[2..2]);
	w_anode924w[] = ( (w_anode924w[2..2] & w_data656w[2..2]), (w_anode924w[1..1] & w_data656w[1..1]), (w_anode924w[0..0] & (! w_data656w[0..0])), w_anode853w[2..2]);
	w_anode934w[] = ( (w_anode934w[2..2] & w_data656w[2..2]), (w_anode934w[1..1] & w_data656w[1..1]), (w_anode934w[0..0] & w_data656w[0..0]), w_anode853w[2..2]);
	w_anode945w[] = ( (w_anode945w[1..1] & data_wire[4..4]), (w_anode945w[0..0] & data_wire[3..3]), B"1");
	w_anode955w[] = ( (w_anode955w[2..2] & (! w_data656w[2..2])), (w_anode955w[1..1] & (! w_data656w[1..1])), (w_anode955w[0..0] & (! w_data656w[0..0])), w_anode945w[2..2]);
	w_anode966w[] = ( (w_anode966w[2..2] & (! w_data656w[2..2])), (w_anode966w[1..1] & (! w_data656w[1..1])), (w_anode966w[0..0] & w_data656w[0..0]), w_anode945w[2..2]);
	w_anode976w[] = ( (w_anode976w[2..2] & (! w_data656w[2..2])), (w_anode976w[1..1] & w_data656w[1..1]), (w_anode976w[0..0] & (! w_data656w[0..0])), w_anode945w[2..2]);
	w_anode986w[] = ( (w_anode986w[2..2] & (! w_data656w[2..2])), (w_anode986w[1..1] & w_data656w[1..1]), (w_anode986w[0..0] & w_data656w[0..0]), w_anode945w[2..2]);
	w_anode996w[] = ( (w_anode996w[2..2] & w_data656w[2..2]), (w_anode996w[1..1] & (! w_data656w[1..1])), (w_anode996w[0..0] & (! w_data656w[0..0])), w_anode945w[2..2]);
	w_data656w[2..0] = data_wire[2..0];
END;
--VALID FILE
